//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "complaints")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub complaint_id: i32,
    pub from_group_id: i32,
    pub to_group_id: i32,
    #[sea_orm(column_type = "Text")]
    pub text: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::groups::Entity",
        from = "Column::FromGroupId",
        to = "super::groups::Column::GroupId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Groups2,
    #[sea_orm(
        belongs_to = "super::groups::Entity",
        from = "Column::ToGroupId",
        to = "super::groups::Column::GroupId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Groups1,
}

impl ActiveModelBehavior for ActiveModel {}
