//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, utoipa :: ToSchema,
)]
#[sea_orm(table_name = "student_uploads")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub upload_id: i32,
    pub student_part_selection_id: i32,
    #[sea_orm(unique)]
    pub path: String,
    pub timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::student_part_selections::Entity",
        from = "Column::StudentPartSelectionId",
        to = "super::student_part_selections::Column::StudentPartSelectionId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    StudentPartSelections,
}

impl Related<super::student_part_selections::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::StudentPartSelections.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
