//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, utoipa::ToSchema,
)]
#[sea_orm(table_name = "admin_roles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub admin_role_id: i32,
    #[sea_orm(unique)]
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::admins::Entity")]
    Admins,
}

impl Related<super::admins::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Admins.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
