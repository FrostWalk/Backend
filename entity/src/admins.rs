//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, utoipa :: ToSchema,
)]
#[sea_orm(table_name = "admins")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub admin_id: i32,
    pub first_name: String,
    pub last_name: String,
    #[sea_orm(unique)]
    pub email: String,
    pub password_hash: String,
    pub admin_role_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::admin_roles::Entity",
        from = "Column::AdminRoleId",
        to = "super::admin_roles::Column::AdminRoleId",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    AdminRoles,
}

impl Related<super::admin_roles::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AdminRoles.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
